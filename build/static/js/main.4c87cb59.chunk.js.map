{"version":3,"sources":["components/container/Container.js","components/Row/Row.js","components/Column/Column.js","components/jumbotron/jumbotron.js","components/SearchForm/SearchForm.js","components/ResultList/ResultList.js","components/ResultListItem/ResultListItem.js","components/SavedArticles/SavedArticles.js","components/Footer/Footer.js","utils/API.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","react_default","a","createElement","Object","assign","className","concat","fluid","Row","Col","size","split","map","join","NYTJumbotron","reactstrap_es","SearchForm","id","for","value","query","onChange","handleTopicChange","type","name","placeholder","begin","handleStartYearChange","end","handleEndYearChange","onClick","handleFormSubmit","ResultList","style","marginTop","children","ResultListItem","_ref","_id","handleSaveButton","title","snippet","date","url","container_Container","components_Row_Row","Column","rel","target","href","SavedArticles","class","Footer","api","getArticles","axios","get","BASEURL","saveArticle","articleData","post","getSavedArticles","Home","state","articles","results","error","then","res","_this","setState","data","event","article","find","console","log","preventDefault","response","docs","_this2","this","jumbotron_jumbotron","components_SearchForm_SearchForm","components_ResultList_ResultList","components_ResultListItem_ResultListItem","key","headline","main","pub_date","web_url","components_SavedArticles_SavedArticles","components_Footer_Footer","Component","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c87cb59.chunk.js","sourcesContent":["\nimport React from \"react\";\n\n\nconst Container = props =>\n  <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n\n\nexport default Container;","\nimport React from \"react\";\n\n\nconst Row = props =>\n    <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n\n\nexport default Row;","\nimport React from \"react\";\n\n\nconst Col = props => {\n    const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n    return <div className={size} {...props} />;\n};\n\nexport default Col;\n","\nimport React from 'react';\nimport { Jumbotron } from 'reactstrap';\nimport './jumbotron.css';\n\nconst NYTJumbotron = (props) => {\n    return (\n        <div className=\"header\">\n            <Jumbotron className=\"text-center jumbotron\">\n                <h1 className=\"display-3\">New York Times React Search</h1>\n                <p className=\"lead\">Search, read, and annotate New York Times articles</p>\n            </Jumbotron>\n        </div>\n    );\n};\n\n// Export Jumbotron component.\nexport default NYTJumbotron;","\nimport React from \"react\";\nimport \"./SearchForm.css\";\nimport { Card, \n    Button, \n    CardHeader, \n    CardBody, \n    Form, \n    FormGroup, \n    Label, \n    Input, } from 'reactstrap';\n\nconst SearchForm = (props) => {\n  return (\n    <div>\n      <Card className=\"search-form\" id=\"search-form\">\n        <CardHeader>\n            <h2 className=\"card-header\">Search articles</h2>\n        </CardHeader>\n        <CardBody>\n            <Form>\n                <FormGroup>\n                    <Label for=\"topic\" className=\"form-label\">Topic (for example, sports)</Label>\n                    <Input\n                        value={props.query}\n                        onChange={props.handleTopicChange}\n                        type=\"text\" \n                        name=\"topic\" \n                        id=\"articleTopic\" \n                        placeholder=\"\" />\n                </FormGroup>\n\n                <FormGroup>\n                    <Label for=\"startYear\" className=\"form-label\">Start year (YYYY)</Label>\n                    <Input \n                        value={props.begin}\n                        onChange={props.handleStartYearChange}\n                        type=\"text\" \n                        name=\"startYear\" \n                        id=\"startYear\" \n                        placeholder=\"YYYY\" />\n                </FormGroup>\n\n                <FormGroup>\n                    <Label for=\"endYear\" className=\"form-label\">End year (YYYY)</Label>\n                    <Input \n                        value={props.end}\n                        onChange={props.handleEndYearChange}\n                        type=\"text\" \n                        name=\"endYear\" \n                        id=\"endYear\" \n                        placeholder=\"YYYY\" />\n                </FormGroup>\n\n                <Button\n                    type=\"submit\"\n                    onClick={props.handleFormSubmit}\n                    className=\"btn search-btn\"\n                    size=\"lg\"\n                >\n                    Search\n                </Button>\n            </Form>\n\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\n// export search form.\nexport default SearchForm;","\nimport React from \"react\";\nimport \"./ResultList.css\";\n\n\nimport { Card, \n    CardHeader, \n    CardBody } from 'reactstrap';\n\n// Search results list component.\nconst ResultList = props => (\n    <Card className=\"search-results\" id=\"results\" style={{marginTop: 50}}>\n        <CardHeader>\n            <h2 className=\"card-header\">Search Results</h2>\n        </CardHeader>\n        <CardBody>\n            <ul className=\"list-group\">{props.children}</ul>\n        </CardBody>\n    </Card>\n);\n\n// Export search results list component.\nexport default ResultList;\n","import React from \"react\";\nimport Container from \"../container/Container\";\nimport Row from \"../Row/Row\";\nimport Col from \"../Column/Column\";\nimport './ResultListItem.css';\n\n\nconst ResultListItem = ({ _id, handleSaveButton, title, snippet, date, url }) => (\n    <li>\n        <Container>\n            <Row style={{marginTop: 40}}>\n                <Col size=\"xs-8 sm-9\">\n                    <h3>{ title }</h3>\n                    <p>{ snippet }</p>\n                    <p>Published on { date }</p>\n                    <a rel=\"noreferrer noopener\" target=\"_blank\" href={ url }>\n                        <button className=\"btn btn-primary\">Continue reading</button>\n                    </a>\n                    <button id = { _id } className = \"btn btn-primary save-btn\" onClick = {() => handleSaveButton(_id)} > Save article </button>\n                </Col>\n            </Row>\n        </Container>\n    </li>\n);\n\nexport default ResultListItem;","\nimport React from \"react\";\nimport { Card, \n    CardHeader, \n    CardBody } from 'reactstrap';\n\n\nconst SavedArticles = props => (\n    <Card className=\"saved-articles main-content-section\" id=\"articles\">\n        <CardHeader>\n            <h2 class=\"card-header\">Saved articles</h2>\n        </CardHeader>\n        <CardBody>\n            {/* <ul className=\"list-group search-results\">\n                {props.results.map(result => (\n                    <li key={result} className=\"list-group-item\">\n                        <p />\n                    </li>\n                ))}\n            </ul> */}\n        </CardBody>\n    </Card>\n);\n\nexport default SavedArticles;","import React from 'react';\nimport { Card, \n    CardBody, \n    CardTitle, \n } from 'reactstrap';\nimport Container from \"../container/Container\";\nimport './Footer.css';\n\n// Footer component\nconst Footer = (props) => {\n    return (\n        <div className=\"footer\">\n            <Container >\n                <Card>\n                    <CardBody>\n                        <CardTitle className=\"footer-heading\">\n                            New York Times React Search\n                        </CardTitle>\n                    </CardBody>\n                </Card>\n            </Container>\n        </div>\n    );\n};\n\nexport default Footer;","import axios from \"axios\";\n\nconst api = {\n\n    // Grabs articles from the New York Times using the the New York Times article search API.\n    getArticles: function (query, begin, end) {\n        const BASEURL = \"https://api.nytimes.com/svc/search/v2/articlesearch.json\";\n        const APIKEY = \"?api-key=01b8f15e77a54651bc736dfce7ffdb71\";\n        return axios.get(BASEURL + APIKEY + \"&q=\" + query + \"&begin_date=\" + begin + \"0101&end_date=\" + end + \"0101\");\n    },\n    \n    // saves articles to the database\n    saveArticle: function(articleData) {\n        return axios.post(\"/api/articles\", articleData)\n    },\n\n    // gets saved articles from the db\n    getSavedArticles: function() {\n        return axios.get(\"/api/articles\");\n    },\n    // // Deletes an article from the db\n    // deleteArticle: function (id) {\n    //     return axios.delete(`/api/saved/${id}`);\n    // }\n};\n\nexport default api;","\nimport React, { Component } from \"react\";\nimport Container from \"../components/container\";\nimport Row from \"../components/Row\";\nimport Col from \"../components/Column\";\nimport Jumbotron from '../components/jumbotron/jumbotron';\nimport SearchForm from '../components/SearchForm/SearchForm'\nimport ResultList from '../components/ResultList/ResultList'\nimport ResultListItem from '../components/ResultListItem/ResultListItem'\nimport SavedArticles from '../components/SavedArticles/SavedArticles';\n\n// Import Footer component.\nimport Footer from '../components/Footer/Footer'\nimport api from \"../utils/API\"\n\nclass Home extends Component {\n    state = {\n        query: \"\",\n        begin: \"\",\n        end: \"\",\n        articles: [],\n        results: [],\n        error: \"\",\n    };\n\n    // Method for retrieving articles that were saved to the MongoDB database.\n    getSavedArticles = () => {\n        api.getSavedArticles()\n            .then((res) => {\n                this.setState({ articles: res.data });\n            });\n    }\n\n    // Keep track of what user types into topic input field.\n    handleTopicChange = (event) => {\n        this.setState({ query: event.target.value });\n    }\n\n    // Keep track of what user types into start year input field.\n    handleStartYearChange = (event) => {\n        this.setState({ begin: event.target.value });\n    }\n\n    // Keep track of what user types into end year input field.\n    handleEndYearChange = (event) => {\n        this.setState({ end: event.target.value });\n    }\n\n    // When the user clicks the save article button, save the article to the database.\n    handleSaveButton = id => {\n        const article = this.state.articles.find(article => article._id === id);\n        console.log(\"article: \", article);\n        api.saveArticle(article).then(res => this.getSavedArticles());\n    }\n    \n\n    // When user clicks search, get articles from new york times using nyt article search api.\n    handleFormSubmit = event => {\n        event.preventDefault();\n        console.log(\"Getting NYT Articles\");\n        console.log(\"this.state.query: \", this.state.query);\n        console.log(\"this.state.begin: \", this.state.begin);\n        console.log(\"this.state.end: \", this.state.end);\n        api.getArticles(this.state.query, this.state.begin, this.state.end)\n            .then((res) => {\n                this.setState({ articles: res.data.response.docs });\n                console.log(\"this.state.articles: \", this.state.articles);\n            });\n\n    };\n\n\n    render() {\n        return (\n            <div>\n                <Jumbotron />\n                <div className=\"main-content-section\">\n                    <Container style={{ marginTop: 30 }}>\n                        <Row>\n                            <Col size=\"md-12\">\n                                <SearchForm \n                                    handleFormSubmit={this.handleFormSubmit}\n                                    handleTopicChange={this.handleTopicChange}\n                                    handleStartYearChange={this.handleStartYearChange}\n                                    handleEndYearChange={this.handleEndYearChange}/>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col size=\"md-12\">\n                                <ResultList>\n                                    {this.state.articles.map(article => {\n                                        return (\n                                            <ResultListItem\n                                                _id={article._id}\n                                                key={article._id}\n                                                title={article.headline.main}\n                                                date={article.pub_date}\n                                                url={article.web_url}\n                                                snippet={article.snippet}\n                                                handleSaveButton={this.handleSaveButton}\n                                            />\n                                        );\n                                    })}\n                                </ResultList>\n                            </Col>\n                        </Row>\n                    </Container>\n                    <Container style={{ marginTop: 30 }}>\n                        <Row>\n                <Col size=\"md-12\">\n                    <SavedArticles />\n                </Col>\n                    </Row>\n                    </Container>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\nexport default Home;\n","\nimport React, { Component } from 'react';\nimport './App.css';\nimport Home from './pages/Home';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n    \n      <Router>\n          <div>\n            <Route exact path=\"/\" component={Home} />\n          </div>\n      </Router> \n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}